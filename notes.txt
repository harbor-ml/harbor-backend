Notes

TODOS
   - separate create function into update and create to add a version and new model, respectively. Makes API more RESTful.
   - thoroughly test framework

1. Gino & PostgreSQL on Ubuntu 18.04 bionic beaver
    Upon connection to database, received password authentication failure errors. Default localhost
    URL from tutorial would not work. Had to explicitly auth in with known superuser account.
    Default superuser postgres account did not work because it doesn't have a password, and gino (most likely)
    doesn't handle the implicit arguments correctly. Must explicitly set username and password in order for
    connection to be made.

2. Key-value pairs specified in URL are given in request.query_params, not request.path_params.
    If multiple values are desired for the same key in a URL, separate them with a '+'. In query params,
    the '+' signs are dropped and replaced with spaces.

3. Starlette's auto-parsing won't work for our purposes. Plus signs get auto converted to spaces,
    but so does %20 for default URL encoding. How should we choose to encode multiple values for the same key?
    Thoughts:
        - Can tap into request.url.query directly and do the parsing ourselves. This allows us
          the most freedom.
        - Can specify new schema with Christian--e.g. passing in the list itself. Could parse
          manually or use ast library's literal_eval function for safe evaluation.
    Answer: Can actually use built-in functionality, just must ensure that args are properly URL-encoded.
    This includes the '+' signs.

4. Awesome regex website at https://www.debuggex.com/?flavor=python. Nice URL encoding/decoding website at https://meyerweb.com/eric/tools/dencoder/.

5. If we want to reset the gino database for testing purposes, probably should drop and recreate.

6. Consider looking into database migrations for PostgreSQL.

7. @app.route function as optional second list argument methods, which takes acceptable HTTP request methods.

8. Clipper api at http://clipper.ai/api/api.html

